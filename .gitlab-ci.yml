.package: &package
  image: ${docker_registry}utils/docker:latest-rpm
  stage: build
  tags:
    - dind
  script:
    - docker pull ${docker_registry}rpmbuild:$dist-$arch-onbuild
    - printf "FROM ${docker_registry}rpmbuild:$dist-$arch-onbuild" > Dockerfile
    - if [ -z "$CI_COMMIT_TAG" ]; then
        rpm_release="0.$CI_PIPELINE_ID";
      else
        rpm_release=`rpm --query --queryformat "%{release}\n" --specfile ${namespace}$CI_PROJECT_NAME.spec | head -n 1 | awk -F"." "{print $1}"`;
      fi
    - name=$(echo $CI_PROJECT_NAME| tr '[:upper:]' '[:lower:]')
    - docker build -t $name:latest-$dist-$arch --build-arg "project=omniEvents"
                                               --build-arg "rpm_release=$rpm_release"
                                               --build-arg "spec_file=omniEvents.spec"
                                               --build-arg "arch=$arch" .
    - id=$(docker create $name:latest-$dist-$arch)
    - docker cp $id:/root/rpmbuild/RPMS/ output/
    - docker rm -f $id
  artifacts:
    paths:
      - output/*/*.rpm
    expire_in: 2 days

package:el6:
  variables:
    dist: el6
    arch: x86_64
  <<: *package

package:el6-i386:
  variables:
    dist: el6
    arch: i686
  <<: *package

package:el7:
  variables:
    dist: el7
    arch: x86_64
  <<: *package

deploy:
  image: centos:7
  stage: deploy
  dependencies: []
  script:
    - if [ -n "$jenkins_url" ]; then
        curl --insecure -X POST $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/omniEvents-$CI_COMMIT_REF_NAME/buildWithParameters?pipeline_id=$CI_PIPELINE_ID --user $jenkins_user:$jenkins_api_token;
      fi
